import { Injectable } from '@angular/core';
import { CSVImportFilesCollectionModel, CSVImportModel } from '../../models/imports-models/csvimport.model';
import Papa from 'papaparse'
import { Observable } from "rxjs/Observable";
@Injectable()
export class ImportCommonService {
  private csvImportFileCollectionModel: CSVImportFilesCollectionModel;
  private csvAutoGeneratedModel: CSVImportModel[] = [];

  constructor() {
    this.csvImportFileCollectionModel = {
      contractFiles:[],
      locationFiles:[],
      imfFiles:[],
      reinsuranceFiles:[],
      stepsFunctionFiles:[]
    };
   }

  public getCSVImportFilesCollectionModel(files: File[]) {

   files.forEach((file: File) => this.addfilesIntoModelCollection(file));
    return this.csvImportFileCollectionModel
  }



  private addfilesIntoModelCollection(file: File) {
    //if file is CSV then check
    if (file.name.split('.').pop() == "csv") {
      {
        //if contains contract then add into contact files and return
        if (file.name.toLowerCase().includes("contract")) {
          this.csvImportFileCollectionModel.contractFiles.push(file);
        } else if (file.name.toLowerCase().includes("location")) {
          this.csvImportFileCollectionModel.locationFiles.push(file);
        } else {
          this.validateContractOrLocationType(file)
        }
      }
      //if file is IMF then add into IMF
      if (file.name.split('.').pop() == "imf") {
        this.csvImportFileCollectionModel.imfFiles.push(file);
      }

      //TODo --add logic for reinsurance and Step files
    }
  }
  private validateContractOrLocationType(file: File) {

    new Promise<any>(function (resolve, reject) {
      Papa.parse(file, {
        complete: function (results) {
          return results.data;
        }
      })
    }).then((fileData: any[]) => {
      //if filedata contains following then add into respective array
      if (fileData.find((item: string) => item.toLowerCase() == "state" || item.toLowerCase() == "country" || item.toLowerCase() == "street")) {
        this.csvImportFileCollectionModel.locationFiles.push(file);
      } else {
        this.csvImportFileCollectionModel.contractFiles.push(file);
      }
    });
  }

  //based on uplodads if provides the list of auto generated models

  public getAutoGeneratedCSVImportsModels() {

  if(this.csvImportFileCollectionModel.contractFiles!=null)
  {
    for (var index = 0; index < this.csvImportFileCollectionModel.contractFiles.length; index++) {
      this.csvAutoGeneratedModel.push({
        fileNameContract: this.csvImportFileCollectionModel.contractFiles[index].name,
        fileNameLocation: this.csvImportFileCollectionModel.locationFiles[index].name,
        importId: Math.floor(Math.random() * 20000),
        databaseName: "",
        exposureSetName: ""
      })
    }
      return this.csvAutoGeneratedModel;

   }



  }
}
